// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`matches expected output: $RelayProps.js 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
// @flow

type $FragmentRef<T> = {
  +$fragmentRefs: $PropertyType<T, '$refType'>,
};

// This code used to be very broken, see: https://github.com/babel/babel/issues/9514
//
// I am leaving it here to make sure it still works as expected.

// prettier-ignore
export type $RelayProps<Props, RelayPropT> = $ObjMap<
  $Diff<Props, { relay: RelayPropT | void }>,
  (<T: () => void>( T) =>  T) &
  (<T: { +$refType: any }>( T) =>  $FragmentRef<T>) &
  (<T: { +$refType: any }>(?T) => ?$FragmentRef<T>) &
  (<T: { +$refType: any }>( $ReadOnlyArray< T>) =>  $ReadOnlyArray< $FragmentRef<T>>) &
  (<T: { +$refType: any }>(?$ReadOnlyArray< T>) => ?$ReadOnlyArray< $FragmentRef<T>>) &
  (<T: { +$refType: any }>( $ReadOnlyArray<?T>) =>  $ReadOnlyArray<?$FragmentRef<T>>) &
  (<T: { +$refType: any }>(?$ReadOnlyArray<?T>) => ?$ReadOnlyArray<?$FragmentRef<T>>) &
  (<T>(T) => T)
>

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
"use strict";
`;

exports[`matches expected output: $RelayProps.js 2`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
// @flow

type $FragmentRef<T> = {
  +$fragmentRefs: $PropertyType<T, '$refType'>,
};

// This code used to be very broken, see: https://github.com/babel/babel/issues/9514
//
// I am leaving it here to make sure it still works as expected.

// prettier-ignore
export type $RelayProps<Props, RelayPropT> = $ObjMap<
  $Diff<Props, { relay: RelayPropT | void }>,
  (<T: () => void>( T) =>  T) &
  (<T: { +$refType: any }>( T) =>  $FragmentRef<T>) &
  (<T: { +$refType: any }>(?T) => ?$FragmentRef<T>) &
  (<T: { +$refType: any }>( $ReadOnlyArray< T>) =>  $ReadOnlyArray< $FragmentRef<T>>) &
  (<T: { +$refType: any }>(?$ReadOnlyArray< T>) => ?$ReadOnlyArray< $FragmentRef<T>>) &
  (<T: { +$refType: any }>( $ReadOnlyArray<?T>) =>  $ReadOnlyArray<?$FragmentRef<T>>) &
  (<T: { +$refType: any }>(?$ReadOnlyArray<?T>) => ?$ReadOnlyArray<?$FragmentRef<T>>) &
  (<T>(T) => T)
>

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
// @flow
type $FragmentRef<T> = {
  +$fragmentRefs: $PropertyType<T, '$refType'>
}; // This code used to be very broken, see: https://github.com/babel/babel/issues/9514
//
// I am leaving it here to make sure it still works as expected.
// prettier-ignore

export type $RelayProps<Props, RelayPropT> = $ObjMap<$Diff<Props, {
  relay: RelayPropT | void
}>, (<T: () => void>(T) => T) & (<T: {
  +$refType: any
}>(T) => $FragmentRef<T>) & (<T: {
  +$refType: any
}>(?T) => ?$FragmentRef<T>) & (<T: {
  +$refType: any
}>($ReadOnlyArray<T>) => $ReadOnlyArray<$FragmentRef<T>>) & (<T: {
  +$refType: any
}>(?$ReadOnlyArray<T>) => ?$ReadOnlyArray<$FragmentRef<T>>) & (<T: {
  +$refType: any
}>($ReadOnlyArray<?T>) => $ReadOnlyArray<?$FragmentRef<T>>) & (<T: {
  +$refType: any
}>(?$ReadOnlyArray<?T>) => ?$ReadOnlyArray<?$FragmentRef<T>>) & (<T>(T) => T)>;
`;

exports[`matches expected output: condition.js 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
// @flow

if (__DEV__) {
  console.log('foo'); // eslint-disable-line no-console
}

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
"use strict";

if (process.env.NODE_ENV !== "production") {
  console.log('foo'); // eslint-disable-line no-console
}
`;

exports[`matches expected output: condition.js 2`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
// @flow

if (__DEV__) {
  console.log('foo'); // eslint-disable-line no-console
}

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
/*@flow*/
declare var __DEV__: boolean;

if (__DEV__) {
  console.log('foo'); // eslint-disable-line no-console
}
`;

exports[`matches expected output: invariant-global.js 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
/* eslint-disable */

invariant(Math.random(), 'This should stay AS IS!');

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
"use strict";

/* eslint-disable */
invariant(Math.random(), 'This should stay AS IS!');
`;

exports[`matches expected output: invariant-global.js 2`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
/* eslint-disable */

invariant(Math.random(), 'This should stay AS IS!');

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
/* eslint-disable */
invariant(Math.random(), 'This should stay AS IS!');
`;

exports[`matches expected output: invariant-import.js 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
/* eslint-disable */

import { invariant } from '@kiwicom/js';
import { something } from 'else';

invariant(Math.random(), 'You shall not pass!');

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
"use strict";

var _js = require("@kiwicom/js");

var _else = require("else");

/* eslint-disable */
!Math.random() ? process.env.NODE_ENV !== "production" ? (0, _js.invariant)(false, 'You shall not pass!') : invariant(false) : void 0;
`;

exports[`matches expected output: invariant-import.js 2`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
/* eslint-disable */

import { invariant } from '@kiwicom/js';
import { something } from 'else';

invariant(Math.random(), 'You shall not pass!');

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
/* eslint-disable */
import { invariant } from '@kiwicom/js';
import { something } from 'else';
invariant(Math.random(), 'You shall not pass!');
`;

exports[`matches expected output: invariant-require.js 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
/* eslint-disable */

const { invariant } = require('@kiwicom/js');

invariant(Math.random(), 'You shall not pass!');

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
"use strict";

/* eslint-disable */
const {
  invariant
} = require('@kiwicom/js');

!Math.random() ? process.env.NODE_ENV !== "production" ? invariant(false, 'You shall not pass!') : invariant(false) : void 0;
`;

exports[`matches expected output: invariant-require.js 2`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
/* eslint-disable */

const { invariant } = require('@kiwicom/js');

invariant(Math.random(), 'You shall not pass!');

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
/* eslint-disable */
const {
  invariant
} = require('@kiwicom/js');

invariant(Math.random(), 'You shall not pass!');
`;

exports[`matches expected output: noDevExpression.js 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
// @flow

console.log('This file should stay as is because __DEV__ is missing.'); // eslint-disable-line no-console

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
"use strict";

console.log('This file should stay as is because __DEV__ is missing.'); // eslint-disable-line no-console
`;

exports[`matches expected output: noDevExpression.js 2`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
// @flow

console.log('This file should stay as is because __DEV__ is missing.'); // eslint-disable-line no-console

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
// @flow
console.log('This file should stay as is because __DEV__ is missing.'); // eslint-disable-line no-console
`;

exports[`matches expected output: objectKey.js 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
// @flow

module.exports = {
  rules: {},
  globals: {
    // this shouldn't change (valid object key):
    __DEV__: 'value',

    // this should change (replaceable __DEV__ value):
    key: __DEV__,
  },
};

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
"use strict";

module.exports = {
  rules: {},
  globals: {
    // this shouldn't change (valid object key):
    __DEV__: 'value',
    // this should change (replaceable __DEV__ value):
    key: process.env.NODE_ENV !== "production"
  }
};
`;

exports[`matches expected output: objectKey.js 2`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
// @flow

module.exports = {
  rules: {},
  globals: {
    // this shouldn't change (valid object key):
    __DEV__: 'value',

    // this should change (replaceable __DEV__ value):
    key: __DEV__,
  },
};

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
/*@flow*/
declare var __DEV__: boolean;
module.exports = {
  rules: {},
  globals: {
    // this shouldn't change (valid object key):
    __DEV__: 'value',
    // this should change (replaceable __DEV__ value):
    key: __DEV__
  }
};
`;

exports[`matches expected output: orbitImports.js 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
/* eslint-disable */

import { Alert as A } from '@kiwicom/orbit-components';
import { Alert as B } from '@kiwicom/orbit-components/lib';
import { Passengers as P } from '@kiwicom/orbit-components/icons';
import { Passengers as Q } from '@kiwicom/orbit-components/lib/icons';

module.exports = { A, B, P, Q };

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
"use strict";

var _Alert = _interopRequireDefault(require("@kiwicom/orbit-components/lib/Alert"));

var _Passengers = _interopRequireDefault(require("@kiwicom/orbit-components/lib/icons/Passengers"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/* eslint-disable */
module.exports = {
  A: _Alert.default,
  B: _Alert.default,
  P: _Passengers.default,
  Q: _Passengers.default
};
`;

exports[`matches expected output: orbitImports.js 2`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
/* eslint-disable */

import { Alert as A } from '@kiwicom/orbit-components';
import { Alert as B } from '@kiwicom/orbit-components/lib';
import { Passengers as P } from '@kiwicom/orbit-components/icons';
import { Passengers as Q } from '@kiwicom/orbit-components/lib/icons';

module.exports = { A, B, P, Q };

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
/* eslint-disable */
import { Alert as A } from '@kiwicom/orbit-components';
import { Alert as B } from '@kiwicom/orbit-components/lib';
import { Passengers as P } from '@kiwicom/orbit-components/icons';
import { Passengers as Q } from '@kiwicom/orbit-components/lib/icons';
module.exports = {
  A,
  B,
  P,
  Q
};
`;

exports[`matches expected output: ternary.js 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
// @flow strict-local

// eslint-disable-next-line no-unused-vars
const dev = __DEV__ ? 'true' : 'false';

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
"use strict";

// eslint-disable-next-line no-unused-vars
const dev = process.env.NODE_ENV !== "production" ? 'true' : 'false';
`;

exports[`matches expected output: ternary.js 2`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
// @flow strict-local

// eslint-disable-next-line no-unused-vars
const dev = __DEV__ ? 'true' : 'false';

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
/*@flow strict-local*/
declare var __DEV__: boolean;
// eslint-disable-next-line no-unused-vars
const dev = __DEV__ ? 'true' : 'false';
`;

exports[`matches expected output: valid-code.js 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
// @flow

export default async function test(a: Object): Object {
  return {
    ...a,
    test_1: a?.b ?? 'default',
    test_2: !!__DEV__,
    test_3: await 'this',
  };
}

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = test;

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

async function test(a) {
  var _ref;

  return _objectSpread({}, a, {
    test_1: (_ref = a === null || a === void 0 ? void 0 : a.b) !== null && _ref !== void 0 ? _ref : 'default',
    test_2: !!(process.env.NODE_ENV !== "production"),
    test_3: await 'this'
  });
}
`;

exports[`matches expected output: valid-code.js 2`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
// @flow

export default async function test(a: Object): Object {
  return {
    ...a,
    test_1: a?.b ?? 'default',
    test_2: !!__DEV__,
    test_3: await 'this',
  };
}

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
/*@flow*/
declare var __DEV__: boolean;
export default async function test(a: Object): Object {
  return { ...a,
    test_1: a?.b ?? 'default',
    test_2: !!__DEV__,
    test_3: await 'this'
  };
}
`;

exports[`matches expected output: warning-global.js 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
/* eslint-disable */

warning(Math.random(), 'This should stay AS IS!');

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
"use strict";

/* eslint-disable */
warning(Math.random(), 'This should stay AS IS!');
`;

exports[`matches expected output: warning-global.js 2`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
/* eslint-disable */

warning(Math.random(), 'This should stay AS IS!');

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
/* eslint-disable */
warning(Math.random(), 'This should stay AS IS!');
`;

exports[`matches expected output: warning-import.js 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
/* eslint-disable */

import { warning } from '@kiwicom/js';
import { something } from 'else';

warning(Math.random(), 'I am warning you!');

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
"use strict";

var _js = require("@kiwicom/js");

var _else = require("else");

/* eslint-disable */
process.env.NODE_ENV !== "production" ? (0, _js.warning)(Math.random(), 'I am warning you!') : void 0;
`;

exports[`matches expected output: warning-import.js 2`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
/* eslint-disable */

import { warning } from '@kiwicom/js';
import { something } from 'else';

warning(Math.random(), 'I am warning you!');

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
/* eslint-disable */
import { warning } from '@kiwicom/js';
import { something } from 'else';
warning(Math.random(), 'I am warning you!');
`;

exports[`matches expected output: warning-require.js 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
/* eslint-disable */

const { warning } = require('@kiwicom/js');

warning(Math.random(), 'I am warning you!');

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
"use strict";

/* eslint-disable */
const {
  warning
} = require('@kiwicom/js');

process.env.NODE_ENV !== "production" ? warning(Math.random(), 'I am warning you!') : void 0;
`;

exports[`matches expected output: warning-require.js 2`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
/* eslint-disable */

const { warning } = require('@kiwicom/js');

warning(Math.random(), 'I am warning you!');

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
/* eslint-disable */
const {
  warning
} = require('@kiwicom/js');

warning(Math.random(), 'I am warning you!');
`;
