// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`matches expected output: async-function.js 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
// @flow strict

/* eslint-disable no-return-await */

export default async function test() {
  return await 'this';
}

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = test;

/* eslint-disable no-return-await */
async function test() {
  return await 'this';
}
`;

exports[`matches expected output: async-function.js 2`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
// @flow strict

/* eslint-disable no-return-await */

export default async function test() {
  return await 'this';
}

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
// @flow strict

/* eslint-disable no-return-await */

export default async function test() {
  return await 'this';
}
`;

exports[`matches expected output: babel-issue-9514.js 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
// @flow

// See: https://github.com/babel/babel/issues/9514

type $FragmentRef<T> = {
  +$fragmentRefs: $PropertyType<T, '$refType'>,
};

// prettier-ignore
export type $RelayProps<Props, RelayPropT> = $ObjMap<
  $Diff<Props, { relay: RelayPropT | void }>,
  (<T: () => void>( T) =>  T) &
  (<T: { +$refType: any }>( T) =>  $FragmentRef<T>) &
  (<T: { +$refType: any }>(?T) => ?$FragmentRef<T>) &
  (<T: { +$refType: any }>( $ReadOnlyArray< T>) =>  $ReadOnlyArray< $FragmentRef<T>>) &
  (<T: { +$refType: any }>(?$ReadOnlyArray< T>) => ?$ReadOnlyArray< $FragmentRef<T>>) &
  (<T: { +$refType: any }>( $ReadOnlyArray<?T>) =>  $ReadOnlyArray<?$FragmentRef<T>>) &
  (<T: { +$refType: any }>(?$ReadOnlyArray<?T>) => ?$ReadOnlyArray<?$FragmentRef<T>>) &
  (<T>(T) => T)
>

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
"use strict";
`;

exports[`matches expected output: babel-issue-9514.js 2`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
// @flow

// See: https://github.com/babel/babel/issues/9514

type $FragmentRef<T> = {
  +$fragmentRefs: $PropertyType<T, '$refType'>,
};

// prettier-ignore
export type $RelayProps<Props, RelayPropT> = $ObjMap<
  $Diff<Props, { relay: RelayPropT | void }>,
  (<T: () => void>( T) =>  T) &
  (<T: { +$refType: any }>( T) =>  $FragmentRef<T>) &
  (<T: { +$refType: any }>(?T) => ?$FragmentRef<T>) &
  (<T: { +$refType: any }>( $ReadOnlyArray< T>) =>  $ReadOnlyArray< $FragmentRef<T>>) &
  (<T: { +$refType: any }>(?$ReadOnlyArray< T>) => ?$ReadOnlyArray< $FragmentRef<T>>) &
  (<T: { +$refType: any }>( $ReadOnlyArray<?T>) =>  $ReadOnlyArray<?$FragmentRef<T>>) &
  (<T: { +$refType: any }>(?$ReadOnlyArray<?T>) => ?$ReadOnlyArray<?$FragmentRef<T>>) &
  (<T>(T) => T)
>

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
// @flow

// See: https://github.com/babel/babel/issues/9514

type $FragmentRef<T> = {
  +$fragmentRefs: $PropertyType<T, '$refType'> };


// prettier-ignore
export type $RelayProps<Props, RelayPropT> = $ObjMap<
$Diff<Props, { relay: RelayPropT | void }>,
(<T: () => void>(T) => T) & (
<T: { +$refType: any }>(T) => $FragmentRef<T>) & (
<T: { +$refType: any }>(?T) => ?$FragmentRef<T>) & (
<T: { +$refType: any }>($ReadOnlyArray<T>) => $ReadOnlyArray<$FragmentRef<T>>) & (
<T: { +$refType: any }>(?$ReadOnlyArray<T>) => ?$ReadOnlyArray<$FragmentRef<T>>) & (
<T: { +$refType: any }>($ReadOnlyArray<?T>) => $ReadOnlyArray<?$FragmentRef<T>>) & (
<T: { +$refType: any }>(?$ReadOnlyArray<?T>) => ?$ReadOnlyArray<?$FragmentRef<T>>) & (
<T>(T) => T)>;
`;

exports[`matches expected output: babel-issue-9810.js 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
// @flow

// See: https://github.com/babel/babel/issues/9810

/*:: type TestType = any; */

const executeNodeScript = (
  aaa /*: string */,
  bbb /*: number */,
  ccc /*: any */,
) /*: TestType */ => {
  // README: this code is invalid - leaving it here to see whether it's fixed or not

  // This currently yields invalid Flow code. One workaround is to use regular
  // functions and not arrow functions. See the original issue.
  return [aaa, bbb, ccc];
};

module.exports = executeNodeScript;

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
"use strict";

// See: https://github.com/babel/babel/issues/9810

/*:: type TestType = any; */
const executeNodeScript = (aaa
/*: string */
, bbb
/*: number */
, ccc
/*: any */
) =>
/*: TestType */
{
  // README: this code is invalid - leaving it here to see whether it's fixed or not
  // This currently yields invalid Flow code. One workaround is to use regular
  // functions and not arrow functions. See the original issue.
  return [aaa, bbb, ccc];
};

module.exports = executeNodeScript;
`;

exports[`matches expected output: babel-issue-9810.js 2`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
// @flow

// See: https://github.com/babel/babel/issues/9810

/*:: type TestType = any; */

const executeNodeScript = (
  aaa /*: string */,
  bbb /*: number */,
  ccc /*: any */,
) /*: TestType */ => {
  // README: this code is invalid - leaving it here to see whether it's fixed or not

  // This currently yields invalid Flow code. One workaround is to use regular
  // functions and not arrow functions. See the original issue.
  return [aaa, bbb, ccc];
};

module.exports = executeNodeScript;

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
// @flow

// See: https://github.com/babel/babel/issues/9810

/*:: type TestType = any; */

const executeNodeScript = (
aaa /*: string */,
bbb /*: number */,
ccc /*: any */) =>
/*: TestType */{
  // README: this code is invalid - leaving it here to see whether it's fixed or not

  // This currently yields invalid Flow code. One workaround is to use regular
  // functions and not arrow functions. See the original issue.
  return [aaa, bbb, ccc];
};

module.exports = executeNodeScript;
`;

exports[`matches expected output: class-properties.js 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
// @flow strict

export default class A {
  b = 1;
}

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

class A {
  constructor() {
    _defineProperty(this, "b", 1);
  }

}

exports.default = A;
`;

exports[`matches expected output: class-properties.js 2`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
// @flow strict

export default class A {
  b = 1;
}

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
// @flow strict

export default class A {
  b = 1;}
`;

exports[`matches expected output: dev-expression.js 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
// @flow strict

/* eslint-disable no-console */

if (__DEV__) {
  const dev = __DEV__ ? 'foo' : 'bar';
  console.log(dev);

  console.warn({
    // this shouldn't change (valid object key):
    __DEV__: 'value',

    // this should change (replaceable __DEV__ value):
    key: __DEV__,
  });
}

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
"use strict";

/* eslint-disable no-console */
if (process.env.NODE_ENV !== "production") {
  const dev = process.env.NODE_ENV !== "production" ? 'foo' : 'bar';
  console.log(dev);
  console.warn({
    // this shouldn't change (valid object key):
    __DEV__: 'value',
    // this should change (replaceable __DEV__ value):
    key: process.env.NODE_ENV !== "production"
  });
}
`;

exports[`matches expected output: dev-expression.js 2`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
// @flow strict

/* eslint-disable no-console */

if (__DEV__) {
  const dev = __DEV__ ? 'foo' : 'bar';
  console.log(dev);

  console.warn({
    // this shouldn't change (valid object key):
    __DEV__: 'value',

    // this should change (replaceable __DEV__ value):
    key: __DEV__,
  });
}

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
/*@flow strict*/declare var __DEV__: boolean;

/* eslint-disable no-console */

if (__DEV__) {
  const dev = __DEV__ ? 'foo' : 'bar';
  console.log(dev);

  console.warn({
    // this shouldn't change (valid object key):
    __DEV__: 'value',

    // this should change (replaceable __DEV__ value):
    key: __DEV__ });

}
`;

exports[`matches expected output: invariant-global.js 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
/* eslint-disable */

invariant(Math.random(), 'This should stay AS IS!');

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
"use strict";

/* eslint-disable */
invariant(Math.random(), 'This should stay AS IS!');
`;

exports[`matches expected output: invariant-global.js 2`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
/* eslint-disable */

invariant(Math.random(), 'This should stay AS IS!');

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
/* eslint-disable */

invariant(Math.random(), 'This should stay AS IS!');
`;

exports[`matches expected output: invariant-import.js 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
/* eslint-disable */

import { invariant } from '@kiwicom/js';
import { something } from 'else';

invariant(Math.random(), 'You shall not pass!');

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
"use strict";

var _js = require("@kiwicom/js");

var _else = require("else");

/* eslint-disable */
!Math.random() ? process.env.NODE_ENV !== "production" ? (0, _js.invariant)(false, 'You shall not pass!') : invariant(false) : void 0;
`;

exports[`matches expected output: invariant-import.js 2`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
/* eslint-disable */

import { invariant } from '@kiwicom/js';
import { something } from 'else';

invariant(Math.random(), 'You shall not pass!');

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
/* eslint-disable */

import { invariant } from '@kiwicom/js';
import { something } from 'else';

invariant(Math.random(), 'You shall not pass!');
`;

exports[`matches expected output: invariant-require.js 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
/* eslint-disable */

const { invariant } = require('@kiwicom/js');

invariant(Math.random(), 'You shall not pass!');

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
"use strict";

/* eslint-disable */
const {
  invariant
} = require('@kiwicom/js');

!Math.random() ? process.env.NODE_ENV !== "production" ? invariant(false, 'You shall not pass!') : invariant(false) : void 0;
`;

exports[`matches expected output: invariant-require.js 2`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
/* eslint-disable */

const { invariant } = require('@kiwicom/js');

invariant(Math.random(), 'You shall not pass!');

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
/* eslint-disable */

const { invariant } = require('@kiwicom/js');

invariant(Math.random(), 'You shall not pass!');
`;

exports[`matches expected output: jsx.js 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
// @flow strict

const React = () => {};

export default function Component() {
  return <div>OK</div>;
}

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = Component;

const React = () => {};

function Component() {
  return React.createElement("div", null, "OK");
}
`;

exports[`matches expected output: jsx.js 2`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
// @flow strict

const React = () => {};

export default function Component() {
  return <div>OK</div>;
}

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
// @flow strict

const React = () => {};

export default function Component() {
  return <div>OK</div>;
}
`;

exports[`matches expected output: optional-chaining.js 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
// @flow

module.exports = function(a: Object) {
  return a?.b ?? 'default';
};

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
"use strict";

module.exports = function (a) {
  var _ref;

  return (_ref = a === null || a === void 0 ? void 0 : a.b) !== null && _ref !== void 0 ? _ref : 'default';
};
`;

exports[`matches expected output: optional-chaining.js 2`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
// @flow

module.exports = function(a: Object) {
  return a?.b ?? 'default';
};

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
// @flow

module.exports = function (a: Object) {
  return a?.b ?? 'default';
};
`;

exports[`matches expected output: orbit-imports.js 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
/* eslint-disable */

import { Alert as A } from '@kiwicom/orbit-components';
import { Alert as B } from '@kiwicom/orbit-components/lib';
import { Passengers as P } from '@kiwicom/orbit-components/icons';
import { Passengers as Q } from '@kiwicom/orbit-components/lib/icons';

module.exports = { A, B, P, Q };

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
"use strict";

var _Alert = _interopRequireDefault(require("@kiwicom/orbit-components/lib/Alert"));

var _Passengers = _interopRequireDefault(require("@kiwicom/orbit-components/lib/icons/Passengers"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/* eslint-disable */
module.exports = {
  A: _Alert.default,
  B: _Alert.default,
  P: _Passengers.default,
  Q: _Passengers.default
};
`;

exports[`matches expected output: orbit-imports.js 2`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
/* eslint-disable */

import { Alert as A } from '@kiwicom/orbit-components';
import { Alert as B } from '@kiwicom/orbit-components/lib';
import { Passengers as P } from '@kiwicom/orbit-components/icons';
import { Passengers as Q } from '@kiwicom/orbit-components/lib/icons';

module.exports = { A, B, P, Q };

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
/* eslint-disable */

import { Alert as A } from '@kiwicom/orbit-components';
import { Alert as B } from '@kiwicom/orbit-components/lib';
import { Passengers as P } from '@kiwicom/orbit-components/icons';
import { Passengers as Q } from '@kiwicom/orbit-components/lib/icons';

module.exports = { A, B, P, Q };
`;

exports[`matches expected output: relay.js 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
// @flow strict

const graphql = query => query;

module.exports = graphql\`
  query relayTest {
    __typename
  }
\`;

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
"use strict";

const graphql = query => query;

module.exports = function () {
  return require("./__generated__/relayTest.graphql");
};
`;

exports[`matches expected output: relay.js 2`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
// @flow strict

const graphql = query => query;

module.exports = graphql\`
  query relayTest {
    __typename
  }
\`;

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
// @flow strict

const graphql = query => query;

module.exports = graphql\`
  query relayTest {
    __typename
  }
\`;
`;

exports[`matches expected output: rest-operator.js 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
// @flow

/* eslint-disable no-console */

module.exports = function(a: Object, ...rest: Array<any>) {
  console.warn(rest);
  return {
    ...a,
  };
};

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
"use strict";

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

/* eslint-disable no-console */
module.exports = function (a, ...rest) {
  console.warn(rest);
  return _objectSpread({}, a);
};
`;

exports[`matches expected output: rest-operator.js 2`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
// @flow

/* eslint-disable no-console */

module.exports = function(a: Object, ...rest: Array<any>) {
  console.warn(rest);
  return {
    ...a,
  };
};

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
// @flow

/* eslint-disable no-console */

module.exports = function (a: Object, ...rest: Array<any>) {
  console.warn(rest);
  return {
    ...a };

};
`;

exports[`matches expected output: warning-global.js 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
/* eslint-disable */

warning(Math.random(), 'This should stay AS IS!');

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
"use strict";

/* eslint-disable */
warning(Math.random(), 'This should stay AS IS!');
`;

exports[`matches expected output: warning-global.js 2`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
/* eslint-disable */

warning(Math.random(), 'This should stay AS IS!');

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
/* eslint-disable */

warning(Math.random(), 'This should stay AS IS!');
`;

exports[`matches expected output: warning-import.js 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
/* eslint-disable */

import { warning } from '@kiwicom/js';
import { something } from 'else';

warning(Math.random(), 'I am warning you!');

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
"use strict";

var _js = require("@kiwicom/js");

var _else = require("else");

/* eslint-disable */
process.env.NODE_ENV !== "production" ? (0, _js.warning)(Math.random(), 'I am warning you!') : void 0;
`;

exports[`matches expected output: warning-import.js 2`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
/* eslint-disable */

import { warning } from '@kiwicom/js';
import { something } from 'else';

warning(Math.random(), 'I am warning you!');

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
/* eslint-disable */

import { warning } from '@kiwicom/js';
import { something } from 'else';

warning(Math.random(), 'I am warning you!');
`;

exports[`matches expected output: warning-require.js 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
/* eslint-disable */

const { warning } = require('@kiwicom/js');

warning(Math.random(), 'I am warning you!');

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
"use strict";

/* eslint-disable */
const {
  warning
} = require('@kiwicom/js');

process.env.NODE_ENV !== "production" ? warning(Math.random(), 'I am warning you!') : void 0;
`;

exports[`matches expected output: warning-require.js 2`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
/* eslint-disable */

const { warning } = require('@kiwicom/js');

warning(Math.random(), 'I am warning you!');

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
/* eslint-disable */

const { warning } = require('@kiwicom/js');

warning(Math.random(), 'I am warning you!');
`;
