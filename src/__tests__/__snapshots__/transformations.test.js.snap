// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`matches expected output: async-function.js 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
// @flow strict

/* eslint-disable no-return-await */

export default async function test() {
  return await 'this';
}

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = test;

var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

/* eslint-disable no-return-await */
function test() {
  return _test.apply(this, arguments);
}

function _test() {
  _test = (0, _asyncToGenerator2.default)(
  /*#__PURE__*/
  _regenerator.default.mark(function _callee() {
    return _regenerator.default.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            _context.next = 2;
            return 'this';

          case 2:
            return _context.abrupt("return", _context.sent);

          case 3:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  }));
  return _test.apply(this, arguments);
}
`;

exports[`matches expected output: async-function.js 2`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
// @flow strict

/* eslint-disable no-return-await */

export default async function test() {
  return await 'this';
}

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
// @flow strict

/* eslint-disable no-return-await */

export default async function test() {
  return await 'this';
}
`;

exports[`matches expected output: babel-issue-9514.js 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
// @flow

// See: https://github.com/babel/babel/issues/9514

type $FragmentRef<T> = {
  +$fragmentRefs: $PropertyType<T, '$refType'>,
};

// prettier-ignore
export type $RelayProps<Props, RelayPropT> = $ObjMap<
  $Diff<Props, { relay: RelayPropT | void }>,
  (<T: () => void>( T) =>  T) &
  (<T: { +$refType: any }>( T) =>  $FragmentRef<T>) &
  (<T: { +$refType: any }>(?T) => ?$FragmentRef<T>) &
  (<T: { +$refType: any }>( $ReadOnlyArray< T>) =>  $ReadOnlyArray< $FragmentRef<T>>) &
  (<T: { +$refType: any }>(?$ReadOnlyArray< T>) => ?$ReadOnlyArray< $FragmentRef<T>>) &
  (<T: { +$refType: any }>( $ReadOnlyArray<?T>) =>  $ReadOnlyArray<?$FragmentRef<T>>) &
  (<T: { +$refType: any }>(?$ReadOnlyArray<?T>) => ?$ReadOnlyArray<?$FragmentRef<T>>) &
  (<T>(T) => T)
>

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
"use strict";
`;

exports[`matches expected output: babel-issue-9514.js 2`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
// @flow

// See: https://github.com/babel/babel/issues/9514

type $FragmentRef<T> = {
  +$fragmentRefs: $PropertyType<T, '$refType'>,
};

// prettier-ignore
export type $RelayProps<Props, RelayPropT> = $ObjMap<
  $Diff<Props, { relay: RelayPropT | void }>,
  (<T: () => void>( T) =>  T) &
  (<T: { +$refType: any }>( T) =>  $FragmentRef<T>) &
  (<T: { +$refType: any }>(?T) => ?$FragmentRef<T>) &
  (<T: { +$refType: any }>( $ReadOnlyArray< T>) =>  $ReadOnlyArray< $FragmentRef<T>>) &
  (<T: { +$refType: any }>(?$ReadOnlyArray< T>) => ?$ReadOnlyArray< $FragmentRef<T>>) &
  (<T: { +$refType: any }>( $ReadOnlyArray<?T>) =>  $ReadOnlyArray<?$FragmentRef<T>>) &
  (<T: { +$refType: any }>(?$ReadOnlyArray<?T>) => ?$ReadOnlyArray<?$FragmentRef<T>>) &
  (<T>(T) => T)
>

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
// @flow

// See: https://github.com/babel/babel/issues/9514

type $FragmentRef<T> = {
  +$fragmentRefs: $PropertyType<T, '$refType'> };


// prettier-ignore
export type $RelayProps<Props, RelayPropT> = $ObjMap<
$Diff<Props, { relay: RelayPropT | void }>,
(<T: () => void>(T) => T) & (
<T: { +$refType: any }>(T) => $FragmentRef<T>) & (
<T: { +$refType: any }>(?T) => ?$FragmentRef<T>) & (
<T: { +$refType: any }>($ReadOnlyArray<T>) => $ReadOnlyArray<$FragmentRef<T>>) & (
<T: { +$refType: any }>(?$ReadOnlyArray<T>) => ?$ReadOnlyArray<$FragmentRef<T>>) & (
<T: { +$refType: any }>($ReadOnlyArray<?T>) => $ReadOnlyArray<?$FragmentRef<T>>) & (
<T: { +$refType: any }>(?$ReadOnlyArray<?T>) => ?$ReadOnlyArray<?$FragmentRef<T>>) & (
<T>(T) => T)>;
`;

exports[`matches expected output: babel-issue-9810.js 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
// @flow

// See: https://github.com/babel/babel/issues/9810

/*:: type TestType = any; */

const executeNodeScript = (
  aaa /*: string */,
  bbb /*: number */,
  ccc /*: any */,
) /*: TestType */ => {
  // This currently yields invalid Flow code. One workaround is to use regular
  // functions and not arrow functions. See the original issue.
  return [aaa, bbb, ccc];
};

module.exports = executeNodeScript;

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
"use strict";

// See: https://github.com/babel/babel/issues/9810

/*:: type TestType = any; */
var executeNodeScript = function executeNodeScript(aaa
/*: string */
, bbb
/*: number */
, ccc
/*: any */
)
/*: TestType */
{
  // This currently yields invalid Flow code. One workaround is to use regular
  // functions and not arrow functions. See the original issue.
  return [aaa, bbb, ccc];
};

module.exports = executeNodeScript;
`;

exports[`matches expected output: babel-issue-9810.js 2`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
// @flow

// See: https://github.com/babel/babel/issues/9810

/*:: type TestType = any; */

const executeNodeScript = (
  aaa /*: string */,
  bbb /*: number */,
  ccc /*: any */,
) /*: TestType */ => {
  // This currently yields invalid Flow code. One workaround is to use regular
  // functions and not arrow functions. See the original issue.
  return [aaa, bbb, ccc];
};

module.exports = executeNodeScript;

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
// @flow

// See: https://github.com/babel/babel/issues/9810

/*:: type TestType = any; */

const executeNodeScript = (
aaa /*: string */,
bbb /*: number */,
ccc /*: any */) =>
/*: TestType */{
  // This currently yields invalid Flow code. One workaround is to use regular
  // functions and not arrow functions. See the original issue.
  return [aaa, bbb, ccc];
};

module.exports = executeNodeScript;
`;

exports[`matches expected output: capturing-groups.js 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
// @flow strict

/*  eslint-disable no-console */

const re = /(?<year>\\d{4})-(?<month>\\d{2})-(?<day>\\d{2})/;

console.log(re.exec('1999-02-29')?.groups?.year);

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _typeof2 = _interopRequireDefault(require("@babel/runtime/helpers/typeof"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _wrapNativeSuper2 = _interopRequireDefault(require("@babel/runtime/helpers/wrapNativeSuper"));

var _re$exec, _re$exec$groups;

function _wrapRegExp(re, groups) { _wrapRegExp = function _wrapRegExp(re, groups) { return new BabelRegExp(re, groups); }; var _RegExp = (0, _wrapNativeSuper2.default)(RegExp); var _super = RegExp.prototype; var _groups = new WeakMap(); function BabelRegExp(re, groups) { var _this = _RegExp.call(this, re); _groups.set(_this, groups); return _this; } (0, _inherits2.default)(BabelRegExp, _RegExp); BabelRegExp.prototype.exec = function (str) { var result = _super.exec.call(this, str); if (result) result.groups = buildGroups(result, this); return result; }; BabelRegExp.prototype[Symbol.replace] = function (str, substitution) { if (typeof substitution === "string") { var groups = _groups.get(this); return _super[Symbol.replace].call(this, str, substitution.replace(/\\$<([^>]+)>/g, function (_, name) { return "$" + groups[name]; })); } else if (typeof substitution === "function") { var _this = this; return _super[Symbol.replace].call(this, str, function () { var args = []; args.push.apply(args, arguments); if ((0, _typeof2.default)(args[args.length - 1]) !== "object") { args.push(buildGroups(args, _this)); } return substitution.apply(this, args); }); } else { return _super[Symbol.replace].call(this, str, substitution); } }; function buildGroups(result, re) { var g = _groups.get(re); return Object.keys(g).reduce(function (groups, name) { groups[name] = result[g[name]]; return groups; }, Object.create(null)); } return _wrapRegExp.apply(this, arguments); }

/*  eslint-disable no-console */
var re = _wrapRegExp(/(\\d{4})-(\\d{2})-(\\d{2})/, {
  year: 1,
  month: 2,
  day: 3
});

console.log((_re$exec = re.exec('1999-02-29')) === null || _re$exec === void 0 ? void 0 : (_re$exec$groups = _re$exec.groups) === null || _re$exec$groups === void 0 ? void 0 : _re$exec$groups.year);
`;

exports[`matches expected output: capturing-groups.js 2`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
// @flow strict

/*  eslint-disable no-console */

const re = /(?<year>\\d{4})-(?<month>\\d{2})-(?<day>\\d{2})/;

console.log(re.exec('1999-02-29')?.groups?.year);

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
// @flow strict

/*  eslint-disable no-console */

const re = /(?<year>\\d{4})-(?<month>\\d{2})-(?<day>\\d{2})/;

console.log((re.exec('1999-02-29')?.groups?.year));
`;

exports[`matches expected output: class-properties.js 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
// @flow strict

export default class A {
  b = 1;
}

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var A = function A() {
  (0, _classCallCheck2.default)(this, A);
  (0, _defineProperty2.default)(this, "b", 1);
};

exports.default = A;
`;

exports[`matches expected output: class-properties.js 2`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
// @flow strict

export default class A {
  b = 1;
}

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
// @flow strict

export default class A {
  b = 1;}
`;

exports[`matches expected output: dev-expression.js 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
// @flow strict

/* eslint-disable no-console */

if (__DEV__) {
  const dev = __DEV__ ? 'foo' : 'bar';
  console.log(dev);

  console.warn({
    // this shouldn't change (valid object key):
    __DEV__: 'value',

    // this should change (replaceable __DEV__ value):
    key: __DEV__,
  });
}

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
"use strict";

/* eslint-disable no-console */
if (process.env.NODE_ENV !== "production") {
  var dev = process.env.NODE_ENV !== "production" ? 'foo' : 'bar';
  console.log(dev);
  console.warn({
    // this shouldn't change (valid object key):
    __DEV__: 'value',
    // this should change (replaceable __DEV__ value):
    key: process.env.NODE_ENV !== "production"
  });
}
`;

exports[`matches expected output: dev-expression.js 2`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
// @flow strict

/* eslint-disable no-console */

if (__DEV__) {
  const dev = __DEV__ ? 'foo' : 'bar';
  console.log(dev);

  console.warn({
    // this shouldn't change (valid object key):
    __DEV__: 'value',

    // this should change (replaceable __DEV__ value):
    key: __DEV__,
  });
}

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
/*@flow strict*/declare var __DEV__: boolean;

/* eslint-disable no-console */

if (__DEV__) {
  const dev = __DEV__ ? 'foo' : 'bar';
  console.log(dev);

  console.warn({
    // this shouldn't change (valid object key):
    __DEV__: 'value',

    // this should change (replaceable __DEV__ value):
    key: __DEV__ });

}
`;

exports[`matches expected output: invariant-global.js 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
/* eslint-disable */

invariant(Math.random(), 'This should stay AS IS!');

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
"use strict";

/* eslint-disable */
invariant(Math.random(), 'This should stay AS IS!');
`;

exports[`matches expected output: invariant-global.js 2`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
/* eslint-disable */

invariant(Math.random(), 'This should stay AS IS!');

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
/* eslint-disable */

invariant(Math.random(), 'This should stay AS IS!');
`;

exports[`matches expected output: invariant-import.js 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
/* eslint-disable */

import { invariant } from '@kiwicom/js';
import { something } from 'else';

invariant(Math.random(), 'You shall not pass!');

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
"use strict";

var _js = require("@kiwicom/js");

var _else = require("else");

/* eslint-disable */
!Math.random() ? process.env.NODE_ENV !== "production" ? (0, _js.invariant)(false, 'You shall not pass!') : (0, _js.invariant)(false) : void 0;
`;

exports[`matches expected output: invariant-import.js 2`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
/* eslint-disable */

import { invariant } from '@kiwicom/js';
import { something } from 'else';

invariant(Math.random(), 'You shall not pass!');

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
/* eslint-disable */

import { invariant } from '@kiwicom/js';
import { something } from 'else';

invariant(Math.random(), 'You shall not pass!');
`;

exports[`matches expected output: invariant-require.js 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
/* eslint-disable */

const { invariant } = require('@kiwicom/js');

invariant(Math.random(), 'You shall not pass!');

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
"use strict";

/* eslint-disable */
var _require = require('@kiwicom/js'),
    invariant = _require.invariant;

!Math.random() ? process.env.NODE_ENV !== "production" ? invariant(false, 'You shall not pass!') : invariant(false) : void 0;
`;

exports[`matches expected output: invariant-require.js 2`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
/* eslint-disable */

const { invariant } = require('@kiwicom/js');

invariant(Math.random(), 'You shall not pass!');

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
/* eslint-disable */

const { invariant } = require('@kiwicom/js');

invariant(Math.random(), 'You shall not pass!');
`;

exports[`matches expected output: jsx.js 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
// @flow strict

const React = () => {};

export default function Component() {
  return <div>OK</div>;
}

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = Component;

var React = function React() {};

function Component() {
  return React.createElement("div", null, "OK");
}
`;

exports[`matches expected output: jsx.js 2`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
// @flow strict

const React = () => {};

export default function Component() {
  return <div>OK</div>;
}

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
// @flow strict

const React = () => {};

export default function Component() {
  return <div>OK</div>;
}
`;

exports[`matches expected output: optional-chaining.js 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
// @flow

module.exports = function(a: Object) {
  return a?.b ?? 'default';
};

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
"use strict";

module.exports = function (a) {
  var _ref;

  return (_ref = a === null || a === void 0 ? void 0 : a.b) !== null && _ref !== void 0 ? _ref : 'default';
};
`;

exports[`matches expected output: optional-chaining.js 2`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
// @flow

module.exports = function(a: Object) {
  return a?.b ?? 'default';
};

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
// @flow

module.exports = function (a: Object) {
  return a?.b ?? 'default';
};
`;

exports[`matches expected output: orbit-imports.js 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
/* eslint-disable */

import { Alert as A } from '@kiwicom/orbit-components';
import { Alert as B } from '@kiwicom/orbit-components/lib';
import { Passengers as P } from '@kiwicom/orbit-components/icons';
import { Passengers as Q } from '@kiwicom/orbit-components/lib/icons';

module.exports = { A, B, P, Q };

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _Alert = _interopRequireDefault(require("@kiwicom/orbit-components/lib/Alert"));

var _Passengers = _interopRequireDefault(require("@kiwicom/orbit-components/lib/icons/Passengers"));

/* eslint-disable */
module.exports = {
  A: _Alert.default,
  B: _Alert.default,
  P: _Passengers.default,
  Q: _Passengers.default
};
`;

exports[`matches expected output: orbit-imports.js 2`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
/* eslint-disable */

import { Alert as A } from '@kiwicom/orbit-components';
import { Alert as B } from '@kiwicom/orbit-components/lib';
import { Passengers as P } from '@kiwicom/orbit-components/icons';
import { Passengers as Q } from '@kiwicom/orbit-components/lib/icons';

module.exports = { A, B, P, Q };

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
/* eslint-disable */

import { Alert as A } from '@kiwicom/orbit-components';
import { Alert as B } from '@kiwicom/orbit-components/lib';
import { Passengers as P } from '@kiwicom/orbit-components/icons';
import { Passengers as Q } from '@kiwicom/orbit-components/lib/icons';

module.exports = { A, B, P, Q };
`;

exports[`matches expected output: relay.js 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
// @flow strict

const graphql = query => query;

module.exports = graphql\`
  query relayTest {
    __typename
  }
\`;

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
"use strict";

var graphql = function graphql(query) {
  return query;
};

module.exports = function () {
  return require("./__generated__/relayTest.graphql");
};
`;

exports[`matches expected output: relay.js 2`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
// @flow strict

const graphql = query => query;

module.exports = graphql\`
  query relayTest {
    __typename
  }
\`;

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
// @flow strict

const graphql = query => query;

module.exports = graphql\`
  query relayTest {
    __typename
  }
\`;
`;

exports[`matches expected output: rest-operator.js 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
// @flow

/* eslint-disable no-console */

module.exports = function(a: Object, ...rest: Array<any>) {
  console.warn([1, ...rest]);
  const { b, ...c } = a;
  return {
    ...b,
    ...c,
  };
};

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/objectSpread"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

/* eslint-disable no-console */
module.exports = function (a) {
  for (var _len = arguments.length, rest = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    rest[_key - 1] = arguments[_key];
  }

  console.warn([1].concat(rest));
  var b = a.b,
      c = (0, _objectWithoutProperties2.default)(a, ["b"]);
  return (0, _objectSpread2.default)({}, b, c);
};
`;

exports[`matches expected output: rest-operator.js 2`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
// @flow

/* eslint-disable no-console */

module.exports = function(a: Object, ...rest: Array<any>) {
  console.warn([1, ...rest]);
  const { b, ...c } = a;
  return {
    ...b,
    ...c,
  };
};

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
// @flow

/* eslint-disable no-console */

module.exports = function (a: Object, ...rest: Array<any>) {
  console.warn([1, ...rest]);
  const { b, ...c } = a;
  return {
    ...b,
    ...c };

};
`;

exports[`matches expected output: warning-global.js 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
/* eslint-disable */

warning(Math.random(), 'This should stay AS IS!');

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
"use strict";

/* eslint-disable */
warning(Math.random(), 'This should stay AS IS!');
`;

exports[`matches expected output: warning-global.js 2`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
/* eslint-disable */

warning(Math.random(), 'This should stay AS IS!');

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
/* eslint-disable */

warning(Math.random(), 'This should stay AS IS!');
`;

exports[`matches expected output: warning-import.js 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
/* eslint-disable */

import { warning } from '@kiwicom/js';
import { something } from 'else';

warning(Math.random(), 'I am warning you!');

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
"use strict";

var _js = require("@kiwicom/js");

var _else = require("else");

/* eslint-disable */
process.env.NODE_ENV !== "production" ? (0, _js.warning)(Math.random(), 'I am warning you!') : void 0;
`;

exports[`matches expected output: warning-import.js 2`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
/* eslint-disable */

import { warning } from '@kiwicom/js';
import { something } from 'else';

warning(Math.random(), 'I am warning you!');

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
/* eslint-disable */

import { warning } from '@kiwicom/js';
import { something } from 'else';

warning(Math.random(), 'I am warning you!');
`;

exports[`matches expected output: warning-require.js 1`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
/* eslint-disable */

const { warning } = require('@kiwicom/js');

warning(Math.random(), 'I am warning you!');

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
"use strict";

/* eslint-disable */
var _require = require('@kiwicom/js'),
    warning = _require.warning;

process.env.NODE_ENV !== "production" ? warning(Math.random(), 'I am warning you!') : void 0;
`;

exports[`matches expected output: warning-require.js 2`] = `
~~~~~~~~~~ INPUT ~~~~~~~~~~
/* eslint-disable */

const { warning } = require('@kiwicom/js');

warning(Math.random(), 'I am warning you!');

~~~~~~~~~~ OUTPUT ~~~~~~~~~~
/* eslint-disable */

const { warning } = require('@kiwicom/js');

warning(Math.random(), 'I am warning you!');
`;
